#!/bin/bash

BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_PATH=$(dirname $(readlink -f ${BASH_SOURCE%/*}))
DEPS_DIR="$BUILD_DIR/.cloudfoundry"

GDB_SDK_PATH=$BUILDPACK_PATH/sdk/ntoarm-gdb
GDB_DIR=$DEPS_DIR/0/bin

echo "Compile script running..."
ruby "$BUILDPACK_PATH"/bin/compile_r $1 $2
JAVA_EXIT_CODE=$?
echo "Java install EXIT code: $JAVA_EXIT_CODE"

mkdir -p "$GDB_DIR"
echo "Attempting to install gdb"

if [ -f $GDB_SDK_PATH ]; then
    echo "GDB SDK Found"
    cp -rf "$GDB_SDK_PATH" "$GDB_DIR"/ntoarm-gdb
    chmod 777 "$GDB_DIR"/ntoarm-gdb
    export PATH="$GDB_DIR:$PATH"
    echo "GDB installed to $GDB_DIR"
    echo "Checking GDB install directory contents:"
    ls -l $GDB_DIR
    echo "show version" > "$GDB_DIR/commands.txt"
    cat "$GDB_DIR/commands.txt"
    uname -a
    echo "Detecting local architecture"
    file /bin/bash
    echo "Detecting GDB architecture"
    file "$GDB_DIR"/ntoarm-gdb
    "$GDB_DIR"/ntoarm-gdb -quiet -batch -command="$GDB_DIR/commands.txt"
fi

echo "Installing python now"
OLD_BUILDPACK=$BUILDPACK_PATH
BUILDPACK_PATH="$BUILDPACK_PATH"/python-buildpack
chmod -R +x "$BUILDPACK_PATH"
source "$BUILDPACK_PATH"/bin/compile
PYTHON_EXIT_CODE=$?

echo "Python install EXIT code: $PYTHON_EXIT_CODE"

#ENV VARS SETUP:
echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"
env_vars=$($BUILDPACK_PATH/compile-extensions/bin/build_path_from_supply $DEPS_DIR)
for env_var in $env_vars; do
  export $env_var
done
$BUILDPACK_PATH/compile-extensions/bin/write_profiled_from_supply $DEPS_DIR $BUILD_DIR